1 - Dada uma variável a do tipo char (um byte), escreva os trechos de código em C para: 
(a) Somente setar o bit menos significativo de a. 

    int main{
    char a, resultado;
    resultado <= a || "00000001";
    return 0;
    }
    
(b) Somente setar dois bits de a: o menos significativo e o segundo menos significativo. 

    int main{
    char a, resultado;
    resultado <= a || "00000011";
    return 0;
    }
    
(c) Somente zerar o terceiro bit menos significativo de a. 

    int main{
    char a, resultado;
    resultado <= a && "11111110";
    return 0;
    }
    
(d) Somente zerar o terceiro e o quarto bits menos significativo de a. 

    int main{
    char a, resultado;
    resultado <= a && "11110011";
    return 0;
    }
    
(e) Somente inverter o bit mais significativo de a. 

    int main{
    char a, resultado;
    resultado <= a ^ "10000000";
    return 0;
    }
    
(f) Inverter o nibble mais significativo de a, e setar o nibble menos significativo de a.
  
  int main{
    char a, resultado;
    resultado <= a ^ "11110000";
    resultado <= resultado || "00001111";
    return 0;
    }
    
2 - Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.
  
  #include <msp430g2553.h>
  #define LED1 BIT0
  #define LED2 BIT6
  #define LEDS (LED1|LED2)
  #define BTN  BIT3

    int main(void)
  {
    WDTCTL = WDTPW | WDTHOLD;
    P1DIR |= LEDS;

   for(;;){

   P1OUT ^= LEDS;
   _delay_cycles(200000);

    }
    return 0;
  }

3 - Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.


4 - Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

5 - Reescreva o código da questão 2 usando a função da questão 4.

6 - Reescreva o código da questão 3 usando a função da questão 4.
